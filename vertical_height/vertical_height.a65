    processor 6502

    include "vcs.h"
    include "macro.h"

    ; Start an uninitialized segment at $80 for variable declaration
    seg.u variables
    org $80
P0Height byte             ; defines 1 byte for player 0 height
PlayerYPos byte           ; defines 1 byte for player 1 height

    seg code
    org $F000

Start:
    CLEAN_START

    ldx #$00            ; black background color
    stx COLUBK

; Initialize variables
    lda #180
    sta PlayerYPos      ; PlayerYPos = 180

    lda #9
    sta P0Height        ; P0Height = 10   

StartFrame:
    lda #2
    sta VBLANK          ; turn VBLANK on
    sta VSYNC           ; turn VSYNC on

    ; Generate 3 lines of WSYNC
    REPEAT 3
        sta WSYNC       ; three scanlines for VSYNC
    REPEND
    lda #0
    sta VSYNC           ; turn off VSYNC

    REPEAT 37
        sta WSYNC       ; 37 scanlines for VBLANK
    REPEND
    lda #0
    sta VBLANK          ; turn off VBLANK        

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Draw the 192 visible scanlines
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ldx #192       ; X counter contains the remaining scanlines

Scanline:
    txa            ; transfer X to A
    sec            ; make sure carry flag is set
    sbc PlayerYPos ; subtract sprite Y coordinate
    cmp P0Height  ; are we inside the sprite height bounds?
    bcc LoadBitmap ; if result < SpriteHeight, call subroutine
    lda #0         ; else, set index to 0

LoadBitmap:
    tay
    lda P0Bitmap,Y ; load player bitmap slice of data

    sta WSYNC      ; wait for next scanline

    sta GRP0       ; set graphics for player 0 slice

    lda P0Color,Y  ; load player color from lookup table

    sta COLUP0     ; set color for player 0 slice

    dex
    bne Scanline   ; repeat next scanline until finished

    ; Output 30 VBLANK overscans to complete frame
    lda #2
    sta VBLANK
    REPEAT 30
        sta WSYNC
    REPEND
    lda #0
    sta VBLANK

    dec PlayerYPos

    jmp StartFrame

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Lookup table for the player graphics bitmap
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
P0Bitmap:
    byte #%00000000
    byte #%00101000
    byte #%01110100
    byte #%11111010
    byte #%11111010
    byte #%11111010
    byte #%11111110
    byte #%01101100
    byte #%00110000

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Lookup table for the player colors
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
P0Color:
    byte #$00
    byte #$40
    byte #$40
    byte #$40
    byte #$40
    byte #$42
    byte #$42
    byte #$44
    byte #$D2

    org $FFFC
    .word Start     ; Reset vector at $FFFC (where the program starts)
    .word Start     ; Interrupt vector at $FFFE (unused in VCS)
